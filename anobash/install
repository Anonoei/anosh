#!/bin/bash

echo '    ___               _____ __  __'
echo '   /   |  ____  ____ / ___// / / /'
echo '  / /| | / __ \/ __ \\__ \/ /_/ / '
echo ' / ___ |/ / / / /_/ /__/ / __  /  '
echo '/_/  |_/_/ /_/\____/____/_/ /_/   '
ASH_SRC="https://github.com/Anonoei/anosh"

ASH_ROOT="${HOME}/.local/anosh"

if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    echo "$0"
    echo " -h|--help     : show this message"
    echo " -p|--plugins  : delete anosh/plugins"
    echo " -u|--user     : delete user settings"
    echo " -l|--local    : install from specified path"
    exit
fi

if [[ "$1" == "-p" || "$1" == "--plugins" ]]; then
    if [ -d "${ASH_ROOT}/plugins" ]; then
        rm -rf "${ASH_ROOT}/plugins"
    fi
    shift
fi

if [[ "$1" == "-u" || "$1" == "--user" ]]; then
    if [ -d "${ASH_ROOT}/user" ]; then
        rm -rf "${ASH_ROOT}/user"
    fi
    shift
fi

if [[ "$1" == "-l" || "$1" == "--local" ]]; then
    ASH_SRC="$2"
    if [[ "$ASH_SRC" == "." ]]; then
        ASH_SRC="$PWD"
    fi
    foldername=${ASH_SRC##*/}
    foldername=${foldername:-/}
    if [[ ! $foldername == "anosh" ]]; then
        echo "Please install from anozsh source, not $foldername"
        exit
    fi
    if [ ! -d "$ASH_SRC" ]; then
        echo "Unable to install from local directory $ASH_SRC"
        exit
    fi
fi

if [ ! -d $ASH_ROOT ]; then
    mkdir -p $ASH_ROOT
fi

verify_bash_default() {
    if [[ ! $SHELL == *"/bin/bash"* ]]; then
        echo "BASH is not the default shell. Setting BASH to default..."
        chsh -s $(which bash)
    fi
}

cd "${HOME}"
echo "Installing from $ASH_SRC"

verify_bash_default

echo "Cloning AnoSH..."
if [[ -d "${ASH_ROOT}/src" ]]; then
    rm -rf "${ASH_ROOT}/src"
fi
if [[ $ASH_SRC == /* ]]; then
    cp -R "${ASH_SRC}" "${ASH_ROOT}/src"
else
    git clone $ASH_SRC "${ASH_ROOT}/src"
fi

echo "Writing .bashrc"
if [ -f "${HOME}/.bashrc" ]; then
    mv "${HOME}/.bashrc" "${HOME}/.bashrc-bak"
fi

echo "source ${ASH_ROOT}/src/anobash/ash_rc.sh" > "${HOME}/.bashrc"

echo -n "Installed! Running AnoSH"
for _ in "" "" "" "" "" ""; do
    sleep .5
    echo -n "."
done
echo ""
exec bash
