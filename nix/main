#          ___               _____ __  __
#         /   |  ____  ____ / ___// / / /
#        / /| | / __ \/ __ \\__ \/ /_/ /
#       / ___ |/ / / / /_/ /__/ / __  /
#      /_/  |_/_/ /_/\____/____/_/ /_/
# Author: Anonoei (https://github.com/anonoei)
# Source: https://github.com/anonoei/anosh
# License: MIT
export ASH_VERSION="0.10.4"
ASH_TIMER=$(date +%s%N | cut -b1-13)

if [[ $# -eq 0 ]]; then
    echo "AnoSH.main ERROR: Missing shell!"
    echo "  Add your shell to your rc file to use AnoSH."
    return
fi

function get_shell {
    local ASH_SHELLS=(bash zsh pwsh)

    if [[ ! ${ASH_SHELLS[@]} =~ "$1" ]]; then
        echo "AnoSH.init ERROR: Unknown shell \"$1\""
        echo "  shell must be one of (${ASH_SHELLS[@]})"
        echo "  Update your shell in your rc file to use AnoSH."
        return
    fi
    export ASH_SHELL=$1
}
get_shell $1

# Initialize AnoSH variables
export ASH_ROOT=$ASH_CONFIG_ROOT
export ASH_HOME=$ASH_CONFIG_HOME
export ASH_DOWN=$ASH_CONFIG_DOWN

export ASH_INST="$ASH_ROOT/src"
export ASH_USER="${HOME}/.config/anosh"
export _ASH_PATH_COMMON="$ASH_INST/nix/common"

source $_ASH_PATH_COMMON/ash

source $_ASH_PATH_COMMON/logger
ash_log_title "AnoSH"
ash_log_level $ASH_CONFIG_LOG_LEVEL
#ash_log_clear
#ash_log_file "$ASH_USER/anosh.log"


ash_debug "main" "Starting up AnoSH v${ASH_VERSION}!"


export ASH_PLUGS=()
export PATH="$PATH:$ASH_ROOT/plugins/bin" # Add ash plugs to PATH

export ASH_DISTRO=$(bash $_ASH_PATH_COMMON/scripts/distro)
export ASH_PKGMAN=$(bash $_ASH_PATH_COMMON/scripts/pkgman)


function _ash_main_source {
    ash_trace "main" "Sourcing $1"
    source $1
}

_ash_main_source "$_ASH_PATH_COMMON/colors"
_ash_main_source "$_ASH_PATH_COMMON/plugins"
_ash_main_source "$_ASH_PATH_COMMON/packages"

_ash_main_source "$_ASH_PATH_COMMON/aliases"

_ash_main_source "$ASH_INST/nix/$ASH_SHELL/main"

### ---- Initialize everything else ---- ###
if [[ $- == *i* ]]; then # interactive shell
    if [[ ${ASH_PLUGS[@]} =~ "zoxide" ]]; then
        ash_debug "main" "Initializing zoxide..."
        eval "$(zoxide init $ASH_SHELL)"
    fi

    if [[ ! $TERM == "linux" ]]; then
        if [[ ${ASH_PLUGS[@]} =~ "atuin" ]]; then
            ash_debug "main" "Initializing atuin..."
            eval "$(atuin init $ASH_SHELL)"
        fi

        if [[ ${ASH_PLUGS[@]} =~ "starship" ]]; then
            ash_debug "main" "Initializing starship..."
            eval "$(starship init $ASH_SHELL)"
        fi
    else
        ash_debug "main" "Using built in terminal, skipping atuin and starship"
    fi
    ASH_TIMER=$(($(date +%s%N | cut -b1-13)-$ASH_TIMER))
    ASH_TIMER="$(($ASH_TIMER/1000)).${ASH_TIMER:-3}"
    ash_info "main" "AnoSH initialized after ${ASH_TIMER}s"
else
    ash_debug "main" "Not running in interactive shell"
fi
