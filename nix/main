#          ___               _____ __  __
#         /   |  ____  ____ / ___// / / /
#        / /| | / __ \/ __ \\__ \/ /_/ /
#       / ___ |/ / / / /_/ /__/ / __  /
#      /_/  |_/_/ /_/\____/____/_/ /_/
# Author: Anonoei (https://github.com/anonoei)
# Source: https://github.com/anonoei/anosh
# License: MIT
ANOSH_VERSION="0.12.1"
ANOSH_CONFIG="$HOME/.config/anosh"
ANOSH_TIMER=$(date +%s%N | cut -b1-13)

if [[ $# -eq 0 ]]; then
    echo "AnoSH.main ERROR: Missing shell!"
    echo "  Add your shell to your rc file to use AnoSH."
    return
fi

ANOSH_SHELLS=(bash zsh pwsh)

if [[ ! ${ANOSH_SHELLS[@]} =~ "$1" ]]; then
    echo "AnoSH.main ERROR: Unknown shell \"$1\""
    echo "  shell must be one of (${ANOSH_SHELLS[@]})"
    echo "  Update your shell in your rc file to use AnoSH."
    return
fi
ASH_SHELL=$1

if [[ ! -f "$ANOSH_CONFIG/anosh.conf" ]]; then
    echo "AnoSH.main ERROR: Failed to find configuration!"
    echo "  $ANOSH_CONFIG/anosh.conf"
    return
fi

function anosh_config_read {
    (grep -E "^${2}=" -m 1 "${1}" 2>/dev/null || echo "VAR=__UNDEFINED__") | head -n 1 | cut -d '=' -f 2-;
}

function anosh_config_get {
    val="$(anosh_config_read $ANOSH_CONFIG/anosh.conf "${1}")";
    if [ "${val}" = "__UNDEFINED__" ]; then
        val="$(anosh_config_read nix/anosh.conf.defaults "${1}")";
    fi
    printf -- "%s" "${val}";
}

# Initialize AnoSH variables
ANOSH_ROOT="$(anosh_config_get "PATH_ROOT" | sed 's/~/$HOME/g')"
ANOSH_ROOT="$(eval echo $ANOSH_ROOT)"
ANOSH_HOME="$(anosh_config_get "PATH_HOME")"
ANOSH_DOWN="$(anosh_config_get "PATH_DOWN")"

ANOSH_INST="$ANOSH_ROOT/src"
_ANOSH_PATH_COMMON="$ANOSH_INST/nix/common"


ash log new "AnoSH" -l "WARN"
AnoSH_debug "main" "Starting up AnoSH v${ANOSH_VERSION}!"

# Make sure ash has anosh as an extra
ash x install $ANOSH_INST/nix/ash 1> /dev/null

ANOSH_PLUGS=()

ANOSH_DISTRO=$(bash $_ANOSH_PATH_COMMON/scripts/distro)
ANOSH_PKGMAN=$(bash $_ANOSH_PATH_COMMON/scripts/pkgman)


function _anosh_main_source {
    AnoSH_trace "main" "Sourcing $1"
    source $1
}

_anosh_main_source "$_ANOSH_PATH_COMMON/colors"
_anosh_main_source "$_ANOSH_PATH_COMMON/plugins"
_anosh_main_source "$_ANOSH_PATH_COMMON/packages"

_anosh_main_source "$_ANOSH_PATH_COMMON/aliases"

_anosh_main_source "$ANOSH_INST/nix/$ASH_SHELL/main"

### ---- Initialize everything else ---- ###
if [[ $- == *i* ]]; then # interactive shell
    if [[ ${ANOSH_PLUGS[@]} =~ "cod" ]]; then
        source <(cod init $$ $ASH_SHELL)
    fi

    if [[ ${ANOSH_PLUGS[@]} =~ "navi" ]]; then
        eval "$(navi widget $ASH_SHELL)"
    fi

    if [[ ${ANOSH_PLUGS[@]} =~ "zoxide" ]]; then
        AnoSH_debug "main" "Initializing zoxide..."
        eval "$(zoxide init $ASH_SHELL)"
    fi

    if [[ ${ANOSH_PLUGS[@]} =~ "atuin" ]]; then
        AnoSH_debug "main" "Initializing atuin..."
        eval "$(atuin init $ASH_SHELL)"
    fi

    if [[ ! $TERM == "linux" ]]; then
        if [[ ${ANOSH_PLUGS[@]} =~ "starship" ]]; then
            AnoSH_debug "main" "Initializing starship..."
            eval "$(starship init $ASH_SHELL)"
        fi
    else
        AnoSH_debug "main" "Using built in terminal, skipping starship"
    fi

    # Open tmux on SSH
    if [[ -z $(command -v tmux) ]]; then
        if [[ -z "$TMUX" ]] && [[ -n "$SSH_TTY" ]]; then
            tmux attach-session -t ssh_tmux || tmux new-session -s ssh_tmux
        fi
    fi

    ANOSH_TIMER=$(($(date +%s%N | cut -b1-13)-$ANOSH_TIMER))
    ANOSH_TIMER="$(($ANOSH_TIMER/1000)).${ANOSH_TIMER:-3}"
    AnoSH_info "main" "AnoSH initialized after ${ANOSH_TIMER}s"
else
    AnoSH_debug "main" "Not running in interactive shell"
fi
