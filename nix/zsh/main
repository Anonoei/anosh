### ---- Options ---- ###
# Plugins
if [[ ! -d $ASH_PATH_SHELL_PLUGS/zsh-autosuggestions ]]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions "$ASH_PATH_SHELL_PLUGS/zsh-autosuggestions"
fi

if [[ -d $ASH_PATH_SHELL_PLUGS/zsh-autosuggestions ]]; then
    source $ASH_PATH_SHELL_PLUGS/zsh-autosuggestions/zsh-autosuggestions.zsh
    ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=magenta,underline"
    ZSH_AUTOSUGGEST_STRATEGY=(history completion)
    #ZSH_AUTOSUGGEST_ACCEPT_WIDGETS=
    ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
    ZSH_AUTOSUGGEST_USE_ASYNC=1
    ZSH_AUTOSUGGEST_COMPLETION_IGNORE="pacman -S*"
    ZSH_AUTOSUGGEST_COMPLETION_IGNORE="apt install *"
    ZSH_AUTOSUGGEST_COMPLETION_IGNORE="nala install *"
    ZSH_AUTOSUGGEST_COMPLETION_IGNORE="port install *"
    ZSH_AUTOSUGGEST_COMPLETION_IGNORE="brew install *"
fi

## Completion
# setopt COMPLETE_ALIASES # uses aliases for completion
# zstyle ':completion::complete:*' gain-privileges 1
# zstyle ':completion:*' completer _extensions _complete _approximate
# zstyle ':completion:*' menu select
# zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}'
# zstyle -e ':completion:*:approximate:*' max-errors \
#     'reply=( $(( ($#PREFIX+$#SUFFIX)/3 )) numeric )'
# zstyle ':completion:*:expand:*' tag-order all-expansions
# zstyle ':completion::complete:*' use-cache 1
# zstyle ':completion:*:descriptions' format '%U%F{cyan}%d%f%u'
# zstyle ':completion:*' verbose yes
# zstyle ':completion:*:descriptions' format '%B%d%b'
# zstyle ':completion:*:messages' format '%d'
# zstyle ':completion:*:warnings' format 'No matches for: %d'
# zstyle ':completion:*:corrections' format '%B%d (errors: %e)%b'
# zstyle ':completion:*' group-name ''


autoload -Uz compinit # enable compinit
compinit

autoload -U select-word-style
select-word-style bash
setopt AUTO_CD
setopt AUTO_LIST
setopt LIST_PACKED # use columns for listing completions
setopt AUTO_MENU # use menu for ambiguous completions
setopt HASH_LIST_ALL
setopt CORRECT
setopt CORRECT_ALL
setopt IGNORE_EOF
#setopt PRINT_EXIT_VALUE
setopt CHECK_JOBS

# git info
autoload -Uz vcs_info # enable vcs_info
zstyle ':vcs_info:*' check-for-changes true
# %s version control system
# %r root directory of repository
# %S relative path to root directory
# %b branch name
# %m info about stashes
# %u unstagd changes
# %c stages changes
zstyle ':vcs_info:git*' formats " ${blue}[${green}%s${blue}/${default}%r${blue}: ${cyan}%b ${yellow}%m%u%c${blue}]${RESET}"
precmd () { vcs_info }
# help info
autoload -Uz run-help
autoload -Uz run-help-git run-help-ip run-help-openssl run-help-p4 run-help-sudo run-help-svk run-help-svn

### ---- Key bindings ---- ###
bindkey -e

bindkey "^[[3~" delete-char
bindkey "^[[3;5~" kill-word
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
bindkey "^[[1;3C" forward-word
bindkey "^[[1;3D" backward-word
bindkey '^[[Z' reverse-menu-complete

## Places changes in the order above, IE:
# $TextType $BackgroundColor $TextColor
#
## colored MAN pages ##
export LESS_TERMCAP_mb=$"${S_R}${F_E}"
export LESS_TERMCAP_md=$"${S_R}${B_B}${F_G}"
export LESS_TERMCAP_me=$"${S_R}"
export LESS_TERMCAP_se=$"${S_R}"
export LESS_TERMCAP_so=$"${S_R}${B_E}${F_Y}"
export LESS_TERMCAP_ue=$"${S_R}"
export LESS_TERMCAP_us=$"${S_R}${B_B}${F_M}"
